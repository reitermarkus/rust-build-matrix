on: [pull_request, push]

name: CI

jobs:
  ci:
    name: ci (${{ matrix.name }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: default
            setup: ''
            expected-matrix: |
              [
                {
                  "os": "ubuntu-latest",
                  "toolchain": "stable",
                  "target": "x86_64-unknown-linux-gnu",
                  "use-cross": true,
                  "features": []
                },
                {
                  "os": "macos-latest",
                  "toolchain": "stable",
                  "target": "x86_64-apple-darwin",
                  "use-cross": false,
                  "features": []
                },
                {
                  "os": "macos-latest",
                  "toolchain": "stable",
                  "target": "aarch64-apple-darwin",
                  "use-cross": false,
                  "features": []
                }
              ]
          - name: env
            setup: |
              echo 'CARGO_BUILD_TARGET=arm-unknown-linux-gnueabihf' >> "${GITHUB_ENV}"
            expected-matrix: |
              [
                {
                  "os": "ubuntu-latest",
                  "toolchain": "stable",
                  "target": "arm-unknown-linux-gnueabihf",
                  "use-cross": true,
                  "features": []
                }
              ]
          - name: config
            setup: |
              mkdir .cargo
              echo '[build]' >> .cargo/config.toml
              echo 'target = "arm-unknown-linux-gnueabihf"' >> .cargo/config.toml
            expected-matrix: |
              [
                {
                  "os": "ubuntu-latest",
                  "toolchain": "stable",
                  "target": "arm-unknown-linux-gnueabihf",
                  "use-cross": true,
                  "features": []
                }
              ]

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - run: |
          set -euo pipefail

          cargo init --bin .

          ${{ matrix.setup }}

      - uses: ./
        id: generate-matrix

      - run: |
          set -euo pipefail

          jq <<< "${expected_matrix}" > expected.json
          jq <<< "${matrix}" > actual.json
          diff expected.json actual.json
        env:
          matrix: ${{ steps.generate-matrix.outputs.matrix }}
          expected_matrix: ${{ matrix.expected-matrix }}
